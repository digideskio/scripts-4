bold=$(tput bold)
normal=$(tput sgr0)
delay="0"
skip="$SKIP"

function slowType() {
	str="$*"
	if [[ "$delay" == "0" ]]; then
		echo -n $bold$str$normal
		return
	fi
	for i in `seq 0 ${#str}`; do
		echo -n $bold${str:$i:1}$normal
		sleep $delay
	done
}

function slowTty() {
	str="$*"
	echo -n $bold >&3
	if [[ "$delay" == "0" ]]; then
		echo -n "$str"
	else
	    for i in `seq 0 ${#str}`; do
		    echo -n "${str:$i:1}"
		    sleep $delay
	    done
	fi
	sleep 0.2  # just to give the other program time to show its input
	echo -n $normal >&3
}

function readChar() {
	read -s -n 1 ch
	if [[ "$ch" == "f" ]]; then
		delay="0"
	elif [[ "$ch" == "s" ]]; then
		delay="0.05"
	elif [[ "$ch" == "r" ]]; then
		skip="x"
	fi
}

function pause() {
	if [[ "$skip" == "" ]]; then
		readChar
	else
		sleep 0.2
	fi
}

function doit() {
	local ignorerc=""

	while [[ "$1" == "--"* ]]; do
		opt="$1"
		shift

		if [[ "$opt" == "--ignorerc" ]]; then
			ignorerc="1"
		fi
	done

	set +e
	echo -n $bold"$"$normal" "
	pause
	slowType $*
	echo "$*" >> cmds
	pause
	echo

	sh -c " $* " &> out
	rc=$?
	cat out
	echo
	[[ "$ignorerc" == "" && "$rc" != "0" ]] && echo "Non-zero exit code" && exit
	set -e
}

function background() {
	echo -n $bold"$"$normal" "
	slowType $*
	echo "$*" >> cmds
	echo
	sh -c " $* " &
}

function ttyDoit() {
	local ignorerc=""

	while [[ "$1" == "--"* ]]; do
		opt="$1"
		shift

		if [[ "$opt" == "--ignorerc" ]]; then
			ignorerc="1"
		fi
	done

    echo -n $bold"$"$normal" "
	pause
    slowType "$*"
	pause
    echo

    exec 3>&1
	set +e
    (
		sleep 0.2
        while read -u 10 line ; do
			dontWait=""
			if [[ "$line" == "run "* ]]; then
				line=${line:4}
				${line}
				continue
			fi
			if [[ "$line" == "@"* ]]; then
				# Lines starting with "@" will be executed
				# immediately w/o pausing before or after showing it
				dontWait="x"
				line=${line:1}
			fi
			if [[ "$dontWait" == "" ]]; then pause ; fi
            slowTty $line
			if [[ "$dontWait" == "" ]]; then pause ; fi
            echo
			sleep 0.2
        done
        echo
    ) | script -efq -a /dev/null -c "$*"
	rc=${PIPESTATUS[1]}
	echo -n $normal
	echo
	[[ "$ignorerc" == "" && "$rc" != "0" ]] && echo "Non-zero exit code" && exit
	set -e
}

function comment() {
	echo -e $bold\# $*\\n$normal
}

# Wait until the passed in cmd returns true
function wait() {
	# set -x
	if [ $1 == "!" ]; then
		shift
	    while (sh -c " $* " &> /dev/null); do
	        sleep 1
	    done
	else
	    while !(sh -c " $* " &> /dev/null); do
	        sleep 1
	    done
	fi
	# set +x
}
